os:
  - linux
  - osx
rvm: 2.2
osx_image: xcode8.2
env:
  global:
    - IOS_SIMULATOR="iPhone 6s"
matrix:
  include:
    - os: osx
      env: BUILD_SCHEME="SQLite iOS"
    - os: osx
      env: BUILD_SCHEME="SQLite Mac"
    - os: osx
      env: VALIDATOR_SUBSPEC="none"
    - os: osx
      env: VALIDATOR_SUBSPEC="standard"
    - os: osx
      env: VALIDATOR_SUBSPEC="standalone"
    - os: osx
      env: VALIDATOR_SUBSPEC="SQLCipher"
    - os: osx
      env: CARTHAGE_PLATFORM="iOS"
    - os: osx
      env: CARTHAGE_PLATFORM="Mac"
    - os: osx
      env: CARTHAGE_PLATFORM="watchOS"
    - os: osx
      env: CARTHAGE_PLATFORM="tvOS"
    - os: osx
      env: PACKAGE_MANAGER_COMMAND="test -Xlinker -lsqlite3"
    - os: linux
      env: PACKAGE_MANAGER_COMMAND="test -Xlinker -lsqlite3" LINUX_SWIFT_URL="https://swift.org/builds/swift-3.0.2-release/ubuntu1404/swift-3.0.2-RELEASE/swift-3.0.2-RELEASE-ubuntu14.04.tar.gz"
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then gem update bundler; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then gem install xcpretty --no-document; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew outdated carthage || brew upgrade carthage; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then apt-get update && apt-get install clang libicu-dev libsqlite3-dev; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then curl "$LINUX_SWIFT_URL" | tar xz; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH="$PATH":"$TRAVIS_BUILD_DIR"/swift-3.0.2-RELEASE-ubuntu14.04/usr/bin; fi
script:
  - ./run-tests.sh
